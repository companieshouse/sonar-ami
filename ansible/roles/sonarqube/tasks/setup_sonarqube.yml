---
# Create temporary directory for build artifacts
- name: Create temporary build directory
  ansible.builtin.tempfile:
    state: directory
  register: tempfile

# Download and extract SonarQube binaries
- name: Download SonarQube archive from S3
  aws_s3:
    bucket: "{{ aws_s3_release_bucket }}"
    object: "{{ sonarqube_download_path }}"
    dest: "{{ tempfile.path }}/{{ sonarqube_archive }}"
    mode: get

- name: Expand SonarQube binaries
  ansible.builtin.unarchive:
    src: "{{ tempfile.path }}/{{ sonarqube_archive }}"
    dest: "{{ sonarqube_install_directory }}"
    owner: "{{ sonarqube_user }}"
    group: "{{ sonarqube_group }}"
    remote_src: true

# Create symlink for SonarQube folder
- name: Link the current version to SonarQube folder
  ansible.builtin.file:
    src: "{{ sonarqube_base_dir }}"
    dest: "{{ sonarqube_install_directory }}/sonarqube"
    state: link
    owner: "{{ sonarqube_user }}"

# Check and install Systemd SonarQube service
- name: Check systemd is service manager
  ansible.builtin.fail:
    msg: "This Ansible script expects the systemd service manager"
  when: "ansible_service_mgr != 'systemd'"

- name: Copy SonarQube systemd unit file into place
  ansible.builtin.template:
    src: sonarqube.service.j2
    dest: "/etc/systemd/system/{{ sonarqube_service_name }}.service"
    owner: root
    group: root
    mode: "0755"
  register: systemd_service

# Create health check service with required scripts (enable in Terraform)
- name: Copy ASG health check systemd unit file into place
  ansible.builtin.template:
    src: sonarqube_asg_notifier.service.j2
    dest: "/etc/systemd/system/{{ health_check_service_name }}.service"
    owner: root
    group: root
    mode: "0755"
  register: systemd_service

- name: Copy ASG systemd timer file into place
  ansible.builtin.template:
    src: sonarqube_asg_notifier.timer.j2
    dest: "/etc/systemd/system/{{ health_check_service_name }}.timer"
    owner: root
    group: root
    mode: "0755"
  register: systemd_service

- name: Copy health check script
  ansible.builtin.template:
    src: auto_scaling_notifier.sh.j2
    dest: "{{ sonarqube_management_dir }}/auto_scaling_notifier.sh"
    owner: "{{ sonarqube_user }}"
    group: "{{ sonarqube_group }}"
    mode: "0550"

# Enforce permissions on the SoanrQube directory
- name: Ensure SonarQube files permissions
  ansible.builtin.file:
    path: "{{ sonarqube_install_directory }}"
    state: directory
    owner: "{{ sonarqube_user }}"
    group: "{{ sonarqube_group }}"
    mode: "o-w"
    recurse: true
