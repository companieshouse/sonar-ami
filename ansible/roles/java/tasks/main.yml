---
# Check the enable status of the Amazon Java package
- name: Check Java package enabled status
  shell: "set -o pipefail && amazon-linux-extras | grep -qE '([0-9]{,3})\\s{2}({{ java_amazon_extra_package }}=latest)' && \
    echo -n INSTALLED || true"
  register: amazon_extra
  changed_when: false
  when: ansible_distribution == "Amazon"

# Enable the openjdk install via yum
- name: Enable the JAVA amazon-linux-extras package
  ansible.builtin.command: "amazon-linux-extras enable {{ java_amazon_extra_package }}"
  register: amazon_extra
  changed_when: amazon_extra.rc != 0
  when: ansible_distribution == "Amazon" and amazon_extra.stdout != 'INSTALLED'

# Update the package cache
- name: Update Package Cache (yum)
  ansible.builtin.yum:
    update_cache: true
  changed_when: false
  when: ansible_pkg_mgr == "yum"

# Install Java using package manager
- name: Install JAVA packages
  ansible.builtin.package:
    name: "{{ java_package }}"
    state: present

# Install JAVA_HOME is set in BASH profile
- name: Set JAVA_HOME if configured.
  ansible.builtin.template:
    src: java_home.sh.j2
    dest: /etc/profile.d/java_home.sh
    mode: "0644"
  when: java_home is defined and java_home

# Check and fail if Java binary not working
- name: Ensure JAVA is installed
  command: "java -version"
  register: prereq_java
  changed_when: false

- name: Fail if JAVA is not available
  ansible.builtin.fail:
    msg: "JAVA is not installed or configured"
  when: not prereq_java.rc == 0
